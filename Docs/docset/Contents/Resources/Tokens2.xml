<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/DNGraph.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/DNGraph</TokenIdentifier>
			<Abstract type="html">Handles interaction with the Graph.</Abstract>
			<DeclaredIn>DNGraph.h</DeclaredIn>
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DNGraph/saveContext</TokenIdentifier>
			<Abstract type="html">Saves the managed object context</Abstract>
			<DeclaredIn>DNGraph.h</DeclaredIn>			
			
			<Declaration>- (void)saveContext</Declaration>
			
			
			<Anchor>//api/name/saveContext</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DNGraph/makePersonWithId:andName:</TokenIdentifier>
			<Abstract type="html">Provides a DNPerson node with the given ID.</Abstract>
			<DeclaredIn>DNGraph.h</DeclaredIn>			
			
			<Declaration>- (DNPerson *)makePersonWithId:(NSString *)facebookId andName:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>facebookId</Name>
					<Abstract type="html">An ID provided by Facebook Stream.</Abstract>
				</Parameter><Parameter>
					<Name>name</Name>
					<Abstract type="html">The name for the person.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A DNPerson matching the ID given.</Abstract></ReturnValue>
			<Anchor>//api/name/makePersonWithId:andName:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DNGraph/makeSubjectWithId:andName:andCategory:</TokenIdentifier>
			<Abstract type="html">Returns a DNSubject node with the given ID.</Abstract>
			<DeclaredIn>DNGraph.h</DeclaredIn>			
			
			<Declaration>- (DNSubject *)makeSubjectWithId:(NSString *)facebookId andName:(NSString *)name andCategory:(NSString *)category</Declaration>
			<Parameters>
				<Parameter>
					<Name>facebookId</Name>
					<Abstract type="html">An ID provided by Facebook Stream.</Abstract>
				</Parameter><Parameter>
					<Name>name</Name>
					<Abstract type="html">The name for the subject.</Abstract>
				</Parameter><Parameter>
					<Name>category</Name>
					<Abstract type="html">The category for the subject.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A DNSubject matching the ID given.</Abstract></ReturnValue>
			<Anchor>//api/name/makeSubjectWithId:andName:andCategory:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DNGraph/makeSourceWithName:</TokenIdentifier>
			<Abstract type="html">Returns a DNSource node with the given ID.</Abstract>
			<DeclaredIn>DNGraph.h</DeclaredIn>			
			
			<Declaration>- (DNSource *)makeSourceWithName:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name for the source.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A DNSource matching the ID given.</Abstract></ReturnValue>
			<Anchor>//api/name/makeSourceWithName:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DNGraph/makeArticleWithSubject:Source:Author:Ranking:andHash:</TokenIdentifier>
			<Abstract type="html">Returns an Article with given DNSubject, DNSource, DNPerson and ranking matching the hash.</Abstract>
			<DeclaredIn>DNGraph.h</DeclaredIn>			
			
			<Declaration>- (DNArticle *)makeArticleWithSubject:(DNSubject *)subject Source:(DNSource *)source Author:(DNPerson *)author Ranking:(float)ranking andHash:(NSString *)hashValue</Declaration>
			<Parameters>
				<Parameter>
					<Name>subject</Name>
					<Abstract type="html">The DNSubject for the article.</Abstract>
				</Parameter><Parameter>
					<Name>source</Name>
					<Abstract type="html">The DNSource for the article.</Abstract>
				</Parameter><Parameter>
					<Name>author</Name>
					<Abstract type="html">The DNPerson (author) of the article.</Abstract>
				</Parameter><Parameter>
					<Name>ranking</Name>
					<Abstract type="html">The overall ranking of the article.</Abstract>
				</Parameter><Parameter>
					<Name>hashValue</Name>
					<Abstract type="html">A hash value used to determine uniqueness.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Returns the created DNArticle.</Abstract></ReturnValue>
			<Anchor>//api/name/makeArticleWithSubject:Source:Author:Ranking:andHash:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DNGraph/getAllNodes</TokenIdentifier>
			<Abstract type="html">Returns all the nodes in the graph, very memory intensive.</Abstract>
			<DeclaredIn>DNGraph.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)getAllNodes</Declaration>
			
			<ReturnValue><Abstract type="html">Returns all nodes.</Abstract></ReturnValue>
			<Anchor>//api/name/getAllNodes</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DNGraph/getAllArticles</TokenIdentifier>
			<Abstract type="html">Returns all articles in the graph.</Abstract>
			<DeclaredIn>DNGraph.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)getAllArticles</Declaration>
			
			<ReturnValue><Abstract type="html">Returns all articles.</Abstract></ReturnValue>
			<Anchor>//api/name/getAllArticles</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DNGraph/makeNodeForJson:</TokenIdentifier>
			<Abstract type="html">Returns a node created from the provided json dictionary (DNStore format).</Abstract>
			<DeclaredIn>DNGraph.h</DeclaredIn>			
			
			<Declaration>- (id&lt;DNNode&gt;)makeNodeForJson:(NSDictionary *)json</Declaration>
			<Parameters>
				<Parameter>
					<Name>json</Name>
					<Abstract type="html">The json object representing a node.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">an object conforming to DNNode protocol.</Abstract></ReturnValue>
			<Anchor>//api/name/makeNodeForJson:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DNGraph/resetStore</TokenIdentifier>
			<Abstract type="html">Resets the contents of the store, completely removing existing nodes. Use with care!</Abstract>
			<DeclaredIn>DNGraph.h</DeclaredIn>			
			
			<Declaration>- (void)resetStore</Declaration>
			
			
			<Anchor>//api/name/resetStore</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
	</File>
</Tokens>